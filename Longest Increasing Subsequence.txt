class Solution {
public:
    int helper(vector<int>& nums, int index, int pre_index, vector<vector<int>> &dp){
        if(index==nums.size()) 
            return 0;
        
        if(dp[index][pre_index+1]!=-1) return dp[index][pre_index+1];
        int len=0;
         
        if( pre_index==-1 ||  nums[index]>nums[pre_index ] )
            len=max(len, 1 + helper(nums , index +1 ,index ,dp ));
        
         len=max(len,  helper(nums  , index +1 , pre_index ,dp) );
        
        return dp[index][pre_index+1]=len;
        
    }
    int lengthOfLIS(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>> dp(n,vector<int> (n+1,-1));
        return helper(nums,0,-1,dp);
    }
};