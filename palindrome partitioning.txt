class Solution {
public:
    bool is_palindrome(string s,int index,int i)
    {
        while(index<i)
        {
            if(s[index]!=s[i])
            return false;
            index++;i--;
        }
        return true;
        
    }
    void helper(string s,vector<string> &v,vector<vector<string>> &ans,int index)
    {
        if(s.size()==index)
        {
            ans.push_back(v);
            return;
        }
        
        for(int i=index;i<s.size();i++)
        {
            if(is_palindrome(s,index,i))
            {
                
              v.push_back(s.substr(index,i-index+1));
              helper(s,v,ans,i+1);
              v.pop_back();  
  
            }
        }
    }
    vector<vector<string>> partition(string s) {
        
         vector<vector<string>> ans;
         vector<string> v;
        helper(s,v,ans,0);
        return ans;
    }
};