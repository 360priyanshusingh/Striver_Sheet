class Solution {
public:
    void  countIslands(int n,int m,vector<vector<int>> &visited, vector<vector<char>>& grid, int row, int col){
         if(row==n || row<0 || col==m || col < 0) return ;
        if(visited[row][col]==1 || grid[row][col]=='0' ) return ;
        visited[row][col]=1;
        
        countIslands(n,m,visited,grid,row+1,col);
        countIslands(n,m,visited,grid,row,col+1);
        countIslands(n,m,visited,grid,row-1,col);
        countIslands(n,m,visited,grid,row,col-1);
           
         return;
    }
    int numIslands(vector<vector<char>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>> visited(n,vector<int> (m,0));
        int count=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(visited[i][j]==0 && grid[i][j]=='1'){
                     count++;
                     countIslands(n,m,visited,grid,i,j);
                }
               
            }
        }

      return count;
    }
};