#include<bits/stdc++.h>
bool is_cycle(int node,int par,vector<bool> &visited, vector<int> adj[]){
         
        visited[node]=true;
        for(auto it:adj[node])
        {
            if(!visited[it]){
               if( is_cycle(it,node,visited,adj))
                   return true;
            }
            else if(par!=it)
                return true;
         }
     
    
    return false;
}
int detectCycleInDirectedGraph(int n, vector < pair < int, int >> & edges) {
  // Write your code here.
    vector<int> adj[n+1];
    vector<bool> visited(n+1,false);
    for(int i=0;i<edges.size();i++){
        int u=edges[i].first;
        int v=edges[i].second;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    if(is_cycle(1,-1,visited,adj))
         return 1;
   
    return 0;
}