#include <bits/stdc++.h> 
int helper(int index,int pre_index,vector<int> &rack,int n,vector<vector<int>> &dp){
    if(index==n) return 0;
    if(dp[index][pre_index+1]!=-1  ) return dp[index][pre_index+1];
    int sum=helper(index+1,pre_index,rack,n,dp);
    if(index==-1 || ( rack[index]>rack[pre_index] && sum < sum+rack[index] )){
        sum=max(sum, rack[index] + helper(index+1,index,rack,n,dp) );
    }
       
       return dp[index][pre_index+1]=sum;
}
int maxIncreasingDumbbellsSum(vector<int> &rack, int n)
{
    // Write your code here
    vector<vector<int>> dp(n+1,vector<int> (n+1,-1));
    return helper(0,-1,rack,n,dp);
}