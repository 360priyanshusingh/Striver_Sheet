class Solution {
public:
     int helper(vector<vector<int>>& grid,int i,int j,int m,int n, vector<vector<int>> &arr,int e)
    {
       
        if(m<=i || n<=j || i<0 || j<0) return 0;
        if(grid[i][j] == -1) return 0;
        if(grid[i][j]== 2){
            return e==-1?1:0;
        }
          e--;  
         grid[i][j]=-1;
         int ans= helper( grid,i,j+1,m,n,arr,e);
         ans+=helper( grid,i+1,j,m,n,arr,e);
         ans+=helper( grid,i,j-1,m,n,arr,e);
         ans+=helper( grid,i-1,j,m,n,arr,e);
         grid[i][j]=0;
         e++;
         return ans;
 
    }
    int uniquePathsIII(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        vector<vector<int>> dp;
      
        int a=0,b=0,e=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]==1){
                    a=i;
                    b=j;
                } 
                else if(grid[i][j]==0) e++;
                    
            }
        }
        
      return  helper(grid,a,b,m,n,dp,e);  
    }
};