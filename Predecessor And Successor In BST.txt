#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/
void makeInodred(BinaryTreeNode<int>* root,vector<int> &v){
    stack<BinaryTreeNode<int>*>  st;
   
    while(true){
        
        if(root){
            st.push(root);
            root=root->left;
        }
        else{
            if(st.empty() == true)  break;
               root=st.top();
               st.pop();
               v.push_back(root->data);
               root=root->right;  
        }
       
    }
    return ;
}
pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root,int key)
{
    // Write your code here.
    
    vector<int> v;
    makeInodred(root,v);
    pair<int,int> ans={-1,-1};
    int i;
    for(i=0;i<v.size();i++){
        if(v[i]==key){
           break;
        }
    }
    
    if( 0<= i-1 && v.size()>=i-1) ans.first=v[i-1];   
    if( 0<= i+1 && v.size()>i+1) ans.second=v[i+1];

    return ans;
    
}
