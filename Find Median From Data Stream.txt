class MedianFinder {
public:
    priority_queue<int> maxheap;
    priority_queue< int , vector<int> , greater<int>> minheap;

    MedianFinder() {
    }
    
    void addNum(int num) {
        
        if(maxheap.empty() || maxheap.top()>num)
           maxheap.push(num);
        else
            minheap.push(num);
        
        if(maxheap.size()> minheap.size()+1)
        {
            minheap.push(maxheap.top());
            maxheap.pop();
        }
        else if(minheap.size()>maxheap.size())
        {
            maxheap.push(minheap.top());
            minheap.pop();
        }
        
        return;
    }
    
    double findMedian() {
       
        
        if(maxheap.size()==minheap.size())
        {
            return (double) (maxheap.top()+minheap.top())/2;
        }
        else
        {
           return  (double) maxheap.top();
        }
    }
    
};

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder* obj = new MedianFinder();
 * obj->addNum(num);
 * double param_2 = obj->findMedian();
 */