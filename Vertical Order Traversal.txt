#include<bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    if(root==NULL) return {};
    map<int,map<int,vector<int>>> mp;
    
    queue<pair<TreeNode<int> *,pair<int,int>>> q;
    q.push({root,{0,0}});
    
    while(!q.empty()){
        TreeNode<int> *node=q.front().first;
        int verticlelevel=q.front().second.first;
        int horizontalevel=q.front().second.second; 
        q.pop();
        mp[verticlelevel][horizontalevel].push_back(node->data);
        if(node->left!=NULL)
            q.push({node->left,{verticlelevel-1,horizontalevel+1}});
        if(node->right!=NULL)
             q.push({node->right,{verticlelevel+1,horizontalevel+1}});
        
    }
    
    vector<int> ans;
    for(auto u:mp){
        for(auto v:u.second){
            for(auto x:v.second)
                ans.push_back(x);
        }
    } 
    return ans;
}