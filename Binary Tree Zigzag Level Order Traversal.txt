/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {

         vector<vector<int>> ans;
        if(root==NULL) return ans;
        stack<TreeNode*> q1;
        stack<TreeNode*> q2;
        q1.push(root);

      
        while(true){
              vector<int> v;
            while(!q1.empty()){
                TreeNode* node=q1.top();
                q1.pop();
                v.push_back(node->val);
                if(node->left!=NULL) q2.push(node->left);
                if(node->right!=NULL)q2.push(node->right);
            }
            ans.push_back(v);
            v={};
            while(!q2.empty()){
                TreeNode* node=q2.top();
                q2.pop();
                v.push_back(node->val);
                if(node->right!=NULL) q1.push(node->right);
                if(node->left!=NULL)q1.push(node->left);
              
                
                
            }
            if(v.size()!=0)
             ans.push_back(v);
            if(q1.size()==0 && q2.size()==0) break;
        }

     return ans;
    }
};